#!/bin/bash
set -e

source $1
name=`basename $1`
echo $name
mkdir -p $dir/sources/{src,include,docs}
mkdir -p $dir/{build,docs,deps}
cp $1 $dir/.prj
if [ -n $test_dir ]; then
    mkdir $dir/$test_dir
fi
cd $dir/sources
CONFIG_DIR="/etc/cpprj"
cp $CONFIG_DIR/CMakeLists.txt .
cp $CONFIG_DIR/Doxyfile .
cp $CONFIG_DIR/$lic ./LICENSE

sed -i "s/\$prj_name/$name/" CMakeLists.txt
sed -i "s/\$prj_name/$name/" Doxyfile

if [ "$type" = "cli" ]; then 
	cp $CONFIG_DIR/cli.cpp src/main.cpp  
elif [ "$type" = "lib" ]; then
	cp $CONFIG_DIR/lib.cpp src/main.cpp
fi

d=$(date +%x\ %X)
sed -i "s|\$prj_name|$name|g" src/main.cpp
sed -i "s|\$auth|$maintainer_name <$maintainer_email>|g"     src/main.cpp
sed -i "s|\$ver|$ver|g"       src/main.cpp
sed -i "s|\$desc|$desc|g"     src/main.cpp
sed -i "s|\$d|$d|g"           src/main.cpp
sed -i "s|\$desc|$desc|g"     Doxyfile
sed -i "s|\$prj_name|$name|g" Doxyfile
sed -i "s|\$ver|$ver|g"       Doxyfile
sed -i "s|\$pwd|$PWD|g"       Doxyfile
sed -i "s|\$prj_name|$name|g"             CMakeLists.txt
sed -i "s|\$cxx_flags|$cxx_flags|g"       CMakeLists.txt
sed -i "s|\$cxx|$cxx|g"                   CMakeLists.txt
sed -i "s|\$linker_flags|$linker_flags|g" CMakeLists.txt
if [[ -n "$git_repo" ]]; then
	git init .
	cp .gitignore .
	git remote add origin $git_repo
	git config --local user.name $maintainer_name
	git config --local user.name $maintainer_email
	git add .
	git commit -m "Initial commit"
	git push origin master
fi
cd ../deps
if [ ${#GIT_DEP[@]} -neq 0 ]; then
	for repo in "${GIT_DEP[@]}"; do
		git clone $repo;
		echo "$repo downloaded"
	done
fi
if [ ${#WGET_DEP[@]} -neq 0 ]; then
	for package in "${WGET_DEP[@]}"; do
		wget $package;
		tar xf $package;
		echo "$package downloaded"
	done
fi
